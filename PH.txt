import serial
import time
import sys
from struct import *
debug=0

#透過g3sensor在PI抓取pm2.5的值
class g3sensor():
    def __init__(self):
        if debug: print "init"
 self.endian = sys.byteorder


#設定uart
    def conn_serial_port(self, device):
        if debug: print device
        self.serial = serial.Serial(device, baudrate=9600)
        if debug: print "conn ok"

    def read_data(self):
#讀取gpio22, 用uart讀回值到data
        data = self.serial.read(22)
        data_hex=data.encode('hex')
#將data轉成data_hex16進位, 然後抓取pm2.5
        pm1_cf=int(data_hex[4]+data_hex[5]+data_hex[6]+data_hex[7],16)
        pm25_cf=int(data_hex[8]+data_hex[9]+data_hex[10]+data_hex[11],16)
        pm10_cf=int(data_hex[12]+data_hex[13]+data_hex[14]+data_hex[15],16)
        pm1=int(data_hex[16]+data_hex[17]+data_hex[18]+data_hex[19],16)
        pm25=int(data_hex[20]+data_hex[21]+data_hex[22]+data_hex[23],16)
        pm10=int(data_hex[24]+data_hex[25]+data_hex[26]+data_hex[27],16)
#之後每個byte都有意思, 按data sheet排列
        data = [pm1_cf, pm10_cf, pm25_cf, pm1, pm10, pm25]
     self.serial.close()
        return data
#讀回數值
    def read(self, argv):
        tty=argv[0:]
        self.conn_serial_port(tty)
        if self.check_keyword() == True:
            self.data = self.read_data()
            if debug: print self.data
            return self.data

if __name__ == '__main__': 
#開始讀值
    air=g3sensor()
    while True:
        pmdata=0
#設定uart
        try:
            pmdata=air.read("/dev/ttyAMA0")
        except: 
            next
#pmdata就最後pm2.5的值
        if pmdata != 0:
            print pmdata
            break
